---
title: 'Digital@DAI Rewind: Right to Repair is a Development Issue'
date: 2022-09-27 15:38:00 -04:00
tags:
- Digital Inclusion
- Hardware
Author: Rob Ryan-Silva
social-image: "/uploads/dan-cristian-padure-BxgVEo_rF-o-unsplash.jpg"
thumbnail: "/uploads/dan-cristian-padure-BxgVEo_rF-o-unsplash.jpg"
---

*The "[Right to Repair](https://www.repair.org/stand-up)" is a concept and advocacy movement centered around the idea that anyone who owns a device, machinery or piece of equipment should have the Right to Repair it themselves or take it to a repair person or shop of their choosing. While this has been a subject in tech news for the last several years, the Right to Repair is back in the spotlight. Last week, Apple unveiled its new, more repairable [iPhone 14](https://www.cnbc.com/2022/09/19/apple-iphone-14-easiest-to-fix-since-2016-ifixit.html) and in June, the New York state legislature [passed](https://www.theverge.com/2022/6/3/23153504/right-to-repair-new-york-state-law-ifixit-repairability-diy) the United States' first Right to Repair bill. With the movement picking up steam, we are reminded that there are linkages between Right to Repair and our work in digital development. This week, we will revisit a [2021 post](https://568d4cf73aaede128400000b.cloud-preview.siteleaf.com/right-to-repair-is-a-development-issue.html) from Rob Ryan-Silva, Senior Director of DAI's Maker Lab, about why this movement is an issue the development community needs to care about.*

<!--more-->

## Who owns the device you are reading this blog post on?

It may seem like a straightforward question until a power surge fries a key circuit or a stray elbow knocks a unit to the floor. At this point, the process of repairing what you thought was your (or your employer’s) property is likely to get a bit more complicated: The device turns out to be held together with [proprietary screws](https://en.wikipedia.org/wiki/List_of_screw_drives#Proprietary_head), contains deliberately unobtainable spare parts, has software locks that cannot be overridden without the manufacturer’s express permission, or other random features included specifically to seal you out.

![2018-04-11-image-6.webp](/uploads/2018-04-11-image-6.webp)`Source: TechSpot`

From the time we first pull our gadgets from their boxes, we tend to think of them as discrete, finished products. But any serious hardware—[Snapchat Spectacles](https://www.spectacles.com/), you may leave the room—is really just part of a process meant to solve a problem. That process includes things like technical support, repair and maintenance, legal considerations, and assumptions about when and how you will eventually replace the hardware.

The current business model is to try to capture ever more of that process to generate revenue for the manufacturer, through tactics like [ecosystem lock-in](https://en.wikipedia.org/wiki/Vendor_lock-in); [subscription models](https://hackaday.com/2021/05/18/do-you-really-own-it-motorcycle-airbag-requires-additional-purchase-to-inflate/); or frustrating independent repair. A growing movement in the United States and especially Europe seeks to reverse the tide: [Right to Repair efforts](https://www.nytimes.com/2020/10/23/climate/right-to-repair.html) aim to introduce regulation and legislation requiring manufacturers to publish repair manuals, use standard fasteners, make spare parts and diagnostic software available to the public at market rates, and eschew software locks. Right to Repair proponents argue that these measures are needed to restore the balance between manufacturers and consumers and stem the deluge of electronic waste generated by irreparable equipment.

The practices of U.S. farm equipment company John Deere are frequently cited as an example of why such measures are necessary. Purchase a piece of John Deere equipment and you will be required to sign [an agreement](https://www.deere.com/assets/pdfs/common/privacy-and-data/docs/agreement_pdfs/english/2016-10-28-Embedded-Software-EULA.pdf) acknowledging that any software, data, or even diagnostic messages in the equipment belongs in perpetuity to the company. Given that a John Deere S670 combine harvester contains 125 [software-involved sensors](https://uspirg.org/feature/usp/deere-headlights), there is little in such equipment that can legally be understood, adjusted, or fixed by users without the manufacturer’s permission. This has led to pushback from politically powerful farmers and a robust black market in [pirated diagnostic and repair tools](https://www.vice.com/en/article/xykkkd/why-american-farmers-are-hacking-their-tractors-with-ukrainian-firmware).

The trend toward monopolization of the hardware process is bad news for all of us who are not shareholders, but it is especially problematic for users in developing countries, who are generally distant from ready supplies of proprietary spare parts and the design expertise of hardware business planners and engineers. For development professionals, the puzzle of how to address problems sustainably with hardware is only getting more difficult. Fortunately, there are things you can do as a development professional:

## Consider the Whole Process

Because hardware is a process, problems are almost never solved merely by dropping a machine. The whole process supporting that machine has to be taken into account: How will it be supported, serviced, repaired, and replaced? That is a complicated puzzle to solve, so the first question to ask is: Is a machine really needed at all, or can this be done another way?

## Procurement is Development, Too

Most development professionals view procurement as a tedious process that should receive as little attention as possible. What if we viewed procurement as a tool to make sure that equipment purchased for projects is truly appropriate for the context? That it could be repaired in the field and did not rely on proprietary standards? At the macro level, what if donors established demonstrable standards of repairability that equipment would have to meet to be eligible for procurement?

## Old Equipment is Not a Good Idea

Some organizations will try to give equipment that has been cast off in the West a new lease on life in a developing country. These well-meaning efforts reason that a 7-year-old laptop or other device still has value to those who cannot afford a newer one. Unfortunately, this means importing equipment that is already well along in the hardware process without having a clear road to replacement (other than waiting for Americans to dump their next one and ship it over) and has been chosen for availability rather than appropriateness to context.

## Support a Local Alternative

Could your hardware needs be produced, maintained, and replaced locally? This seems like science fiction to many in the aid sector, but the [DAI Maker Lab](https://www.dai.com/our-work/solutions/dai-maker-lab) has been working with innovators around the world to build hardware and capacities around hardware since 2015. It may not be the best way to produce medical equipment or something you need 5,000 of, but I have been surprised at the places where I have been able to find the components and the talent to build out whole hardware processes.

## Develop Local Repair Capacities

Organizations such as [Field Ready](https://www.fieldready.org/) have been working with hospitals and others to empower them to repair their own equipment using techniques like digital fabrication. When designing institutional strengthening efforts, could you be building the capabilities of hospitals, water authorities, and other stakeholders to do advanced repair of their own equipment?

## Support Right to Repair

At least for the moment, most of the equipment we use in development is designed and produced far away. U.S. farmers may have an outsized voice in the policy-making process that impacts how that equipment process works, but our stakeholders generally do not. You can be [that voice](https://www.repair.org/). Because Right to Repair is a development issue.